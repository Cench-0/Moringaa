{"ast":null,"code":"var _jsxFileName = \"/home/alex/moringa/phase-5/Moringaa/frontend/src/components/Pairing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pairing({\n  addPairedStudents,\n  addStudentToList,\n  studentsList\n}) {\n  _s();\n  const [studentName, setStudentName] = useState('');\n  const [pairingResult, setPairingResult] = useState([]);\n\n  // Predefined list of students to be paired randomly\n  const randomStudents = [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\"];\n\n  // Handle adding a student manually to the list\n  const handleAddStudent = () => {\n    if (studentName) {\n      addStudentToList(studentName);\n      setStudentName(''); // Clear the input field\n    }\n  };\n\n  // Handle random pairing of students (from manually added list + random students)\n  const handleRandomPairing = () => {\n    const allStudents = [...studentsList, ...randomStudents];\n    const shuffled = [...allStudents].sort(() => Math.random() - 0.5);\n    const pairs = [];\n    for (let i = 0; i < shuffled.length; i += 2) {\n      pairs.push({\n        student1: shuffled[i],\n        student2: shuffled[i + 1] || 'N/A'\n      });\n    }\n    setPairingResult(pairs);\n    pairs.forEach(pair => addPairedStudents(pair)); // Pass the pairs to the parent\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pair Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter student name\",\n        value: studentName,\n        onChange: e => setStudentName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddStudent,\n        children: \"Add Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRandomPairing,\n        children: \"Randomly Pair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Student List:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: studentsList.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: student\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Randomly Paired Students:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pairingResult.map((pair, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [pair.student1, \" and \", pair.student2]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Pairing, \"73b4UqnEB36pxJaafyZA54Hnpgc=\");\n_c = Pairing;\nexport default Pairing;\nvar _c;\n$RefreshReg$(_c, \"Pairing\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Pairing","addPairedStudents","addStudentToList","studentsList","_s","studentName","setStudentName","pairingResult","setPairingResult","randomStudents","handleAddStudent","handleRandomPairing","allStudents","shuffled","sort","Math","random","pairs","i","length","push","student1","student2","forEach","pair","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","student","index","_c","$RefreshReg$"],"sources":["/home/alex/moringa/phase-5/Moringaa/frontend/src/components/Pairing.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Pairing({ addPairedStudents, addStudentToList, studentsList }) {\n  const [studentName, setStudentName] = useState('');\n  const [pairingResult, setPairingResult] = useState([]);\n\n  // Predefined list of students to be paired randomly\n  const randomStudents = [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\"];\n\n  // Handle adding a student manually to the list\n  const handleAddStudent = () => {\n    if (studentName) {\n      addStudentToList(studentName);\n      setStudentName('');  // Clear the input field\n    }\n  };\n\n  // Handle random pairing of students (from manually added list + random students)\n  const handleRandomPairing = () => {\n    const allStudents = [...studentsList, ...randomStudents];\n    const shuffled = [...allStudents].sort(() => Math.random() - 0.5);\n    const pairs = [];\n\n    for (let i = 0; i < shuffled.length; i += 2) {\n      pairs.push({ student1: shuffled[i], student2: shuffled[i + 1] || 'N/A' });\n    }\n\n    setPairingResult(pairs);\n    pairs.forEach((pair) => addPairedStudents(pair));  // Pass the pairs to the parent\n  };\n\n  return (\n    <div>\n      <h2>Pair Students</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter student name\"\n          value={studentName}\n          onChange={(e) => setStudentName(e.target.value)}\n        />\n        <button onClick={handleAddStudent}>Add Student</button>\n      </div>\n      <div>\n        <button onClick={handleRandomPairing}>Randomly Pair</button>\n      </div>\n\n      <h3>Student List:</h3>\n      <ul>\n        {studentsList.map((student, index) => (\n          <li key={index}>{student}</li>\n        ))}\n      </ul>\n\n      <h3>Randomly Paired Students:</h3>\n      <ul>\n        {pairingResult.map((pair, index) => (\n          <li key={index}>\n            {pair.student1} and {pair.student2}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Pairing;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAC;EAAEC,iBAAiB;EAAEC,gBAAgB;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACtE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMY,cAAc,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC;;EAElE;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIL,WAAW,EAAE;MACfH,gBAAgB,CAACG,WAAW,CAAC;MAC7BC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAE;IACvB;EACF,CAAC;;EAED;EACA,MAAMK,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,WAAW,GAAG,CAAC,GAAGT,YAAY,EAAE,GAAGM,cAAc,CAAC;IACxD,MAAMI,QAAQ,GAAG,CAAC,GAAGD,WAAW,CAAC,CAACE,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACjE,MAAMC,KAAK,GAAG,EAAE;IAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACM,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MAC3CD,KAAK,CAACG,IAAI,CAAC;QAAEC,QAAQ,EAAER,QAAQ,CAACK,CAAC,CAAC;QAAEI,QAAQ,EAAET,QAAQ,CAACK,CAAC,GAAG,CAAC,CAAC,IAAI;MAAM,CAAC,CAAC;IAC3E;IAEAV,gBAAgB,CAACS,KAAK,CAAC;IACvBA,KAAK,CAACM,OAAO,CAAEC,IAAI,IAAKvB,iBAAiB,CAACuB,IAAI,CAAC,CAAC,CAAC,CAAE;EACrD,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB9B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QACE+B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAE3B,WAAY;QACnB4B,QAAQ,EAAGC,CAAC,IAAK5B,cAAc,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACF9B,OAAA;QAAQqC,OAAO,EAAE1B,gBAAiB;QAAAe,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACN9B,OAAA;MAAA0B,QAAA,eACE1B,OAAA;QAAQqC,OAAO,EAAEzB,mBAAoB;QAAAc,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eAEN9B,OAAA;MAAA0B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB9B,OAAA;MAAA0B,QAAA,EACGtB,YAAY,CAACkC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC/BxC,OAAA;QAAA0B,QAAA,EAAiBa;MAAO,GAAfC,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAEL9B,OAAA;MAAA0B,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC9B,OAAA;MAAA0B,QAAA,EACGlB,aAAa,CAAC8B,GAAG,CAAC,CAACb,IAAI,EAAEe,KAAK,kBAC7BxC,OAAA;QAAA0B,QAAA,GACGD,IAAI,CAACH,QAAQ,EAAC,OAAK,EAACG,IAAI,CAACF,QAAQ;MAAA,GAD3BiB,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACzB,EAAA,CA9DQJ,OAAO;AAAAwC,EAAA,GAAPxC,OAAO;AAgEhB,eAAeA,OAAO;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}