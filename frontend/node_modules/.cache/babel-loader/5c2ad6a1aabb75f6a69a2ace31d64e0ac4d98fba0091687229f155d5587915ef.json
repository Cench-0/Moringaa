{"ast":null,"code":"var _jsxFileName = \"/home/alex/moringa/phase-5/Moringaa/frontend/src/components/Pairing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pairing({\n  setHistory,\n  setDashboard\n}) {\n  _s();\n  const [students, setStudents] = useState(['John', 'Alice', 'Bob', 'Eve', 'Charlie']); // Random list of students\n  const [pair, setPair] = useState([]);\n  const [history, setLocalHistory] = useState([]);\n\n  // Function to randomly pair students\n  const randomPairing = () => {\n    let shuffled = [...students].sort(() => Math.random() - 0.5);\n    let pairs = [];\n    for (let i = 0; i < shuffled.length; i += 2) {\n      pairs.push([shuffled[i], shuffled[i + 1] || 'No Pair']); // Pair them or leave 'No Pair' if odd number\n    }\n    setPair(pairs);\n  };\n\n  // Handle adding the pair to the history\n  const addToHistory = () => {\n    setHistory(prevHistory => [...prevHistory, ...pair]); // Add pairs to global history\n    setLocalHistory(pair); // Local history (just for showing)\n    setDashboard(pair); // Update dashboard with new pairs\n    alert('Pairs added to history!');\n  };\n\n  // Handle adding a student to the list\n  const addStudent = studentName => {\n    if (studentName && !students.includes(studentName)) {\n      setStudents([...students, studentName]); // Add new student to the list\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pairing\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pair Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Student List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: student\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add student name\",\n        onBlur: e => addStudent(e.target.value) // Add student when losing focus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: randomPairing,\n      children: \"Randomly Pair\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pair-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Pairs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pair.map((p, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `${p[0]} & ${p[1]}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addToHistory,\n      children: \"Add to History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Pairing, \"LjnCmtYyA5Nmr/CyNHuLj+mf7Uc=\");\n_c = Pairing;\nexport default Pairing;\nvar _c;\n$RefreshReg$(_c, \"Pairing\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Pairing","setHistory","setDashboard","_s","students","setStudents","pair","setPair","history","setLocalHistory","randomPairing","shuffled","sort","Math","random","pairs","i","length","push","addToHistory","prevHistory","alert","addStudent","studentName","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","student","index","type","placeholder","onBlur","e","target","value","onClick","p","_c","$RefreshReg$"],"sources":["/home/alex/moringa/phase-5/Moringaa/frontend/src/components/Pairing.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Pairing({ setHistory, setDashboard }) {\n  const [students, setStudents] = useState(['John', 'Alice', 'Bob', 'Eve', 'Charlie']);  // Random list of students\n  const [pair, setPair] = useState([]);\n  const [history, setLocalHistory] = useState([]);\n\n  // Function to randomly pair students\n  const randomPairing = () => {\n    let shuffled = [...students].sort(() => Math.random() - 0.5);\n    let pairs = [];\n    for (let i = 0; i < shuffled.length; i += 2) {\n      pairs.push([shuffled[i], shuffled[i + 1] || 'No Pair']);  // Pair them or leave 'No Pair' if odd number\n    }\n    setPair(pairs);\n  };\n\n  // Handle adding the pair to the history\n  const addToHistory = () => {\n    setHistory((prevHistory) => [...prevHistory, ...pair]);  // Add pairs to global history\n    setLocalHistory(pair);  // Local history (just for showing)\n    setDashboard(pair);  // Update dashboard with new pairs\n    alert('Pairs added to history!');\n  };\n\n  // Handle adding a student to the list\n  const addStudent = (studentName) => {\n    if (studentName && !students.includes(studentName)) {\n      setStudents([...students, studentName]);  // Add new student to the list\n    }\n  };\n\n  return (\n    <div className=\"pairing\">\n      <h2>Pair Students</h2>\n      <div className=\"student-list\">\n        <h3>Student List</h3>\n        <ul>\n          {students.map((student, index) => (\n            <li key={index}>{student}</li>\n          ))}\n        </ul>\n        <input \n          type=\"text\" \n          placeholder=\"Add student name\" \n          onBlur={(e) => addStudent(e.target.value)}  // Add student when losing focus\n        />\n      </div>\n      \n      <button onClick={randomPairing}>Randomly Pair</button>\n\n      <div className=\"pair-list\">\n        <h3>Current Pairs</h3>\n        <ul>\n          {pair.map((p, index) => (\n            <li key={index}>{`${p[0]} & ${p[1]}`}</li>\n          ))}\n        </ul>\n      </div>\n\n      <button onClick={addToHistory}>Add to History</button>\n    </div>\n  );\n}\n\nexport default Pairing;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}