{"ast":null,"code":"var _jsxFileName = \"/home/alex/moringa/phase-5/Moringaa/frontend/src/components/Pairing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pairing = ({\n  onPairStudents\n}) => {\n  _s();\n  const [students, setStudents] = useState([]); // List of students to be paired\n  const [newStudent, setNewStudent] = useState(\"\"); // New student name to add\n  const [randomNames] = useState([\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Emma\", \"Frank\"]); // Random names list\n\n  // Add student to the list of students to be paired\n  const handleAddStudent = () => {\n    if (newStudent.trim() !== \"\") {\n      setStudents([...students, newStudent]);\n      setNewStudent(\"\"); // Clear the input field after adding\n    }\n  };\n\n  // Randomly pair the students\n  const handlePairStudents = () => {\n    if (students.length >= 2) {\n      const shuffled = [...students].sort(() => Math.random() - 0.5); // Shuffle the list\n      const pairs = [];\n\n      // Create pairs\n      for (let i = 0; i < shuffled.length; i += 2) {\n        pairs.push([shuffled[i], shuffled[i + 1]]);\n      }\n      onPairStudents(pairs); // Send pairs to the parent component (App.js or Dashboard)\n      setStudents([]); // Clear the list of students after pairing\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pair Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Random Names List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: randomNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newStudent,\n      onChange: e => setNewStudent(e.target.value),\n      placeholder: \"Enter student name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddStudent,\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePairStudents,\n      children: \"Pair Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Students to Pair\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: student\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Pairing, \"5/1WESCHuoHMuHlduVvsWxKA4Ac=\");\n_c = Pairing;\nexport default Pairing;\nvar _c;\n$RefreshReg$(_c, \"Pairing\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Pairing","onPairStudents","_s","students","setStudents","newStudent","setNewStudent","randomNames","handleAddStudent","trim","handlePairStudents","length","shuffled","sort","Math","random","pairs","i","push","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","index","type","value","onChange","e","target","placeholder","onClick","student","_c","$RefreshReg$"],"sources":["/home/alex/moringa/phase-5/Moringaa/frontend/src/components/Pairing.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Pairing = ({ onPairStudents }) => {\n  const [students, setStudents] = useState([]);  // List of students to be paired\n  const [newStudent, setNewStudent] = useState(\"\");  // New student name to add\n  const [randomNames] = useState([\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Emma\", \"Frank\"]);  // Random names list\n\n  // Add student to the list of students to be paired\n  const handleAddStudent = () => {\n    if (newStudent.trim() !== \"\") {\n      setStudents([...students, newStudent]);\n      setNewStudent(\"\");  // Clear the input field after adding\n    }\n  };\n\n  // Randomly pair the students\n  const handlePairStudents = () => {\n    if (students.length >= 2) {\n      const shuffled = [...students].sort(() => Math.random() - 0.5);  // Shuffle the list\n      const pairs = [];\n\n      // Create pairs\n      for (let i = 0; i < shuffled.length; i += 2) {\n        pairs.push([shuffled[i], shuffled[i + 1]]);\n      }\n\n      onPairStudents(pairs);  // Send pairs to the parent component (App.js or Dashboard)\n      setStudents([]);  // Clear the list of students after pairing\n    }\n  };\n\n  return (\n    <div>\n      <h2>Pair Students</h2>\n      \n      {/* Display random names that can be added manually */}\n      <h3>Random Names List</h3>\n      <ul>\n        {randomNames.map((name, index) => (\n          <li key={index}>{name}</li>\n        ))}\n      </ul>\n      \n      {/* Input field to add a student manually */}\n      <input\n        type=\"text\"\n        value={newStudent}\n        onChange={(e) => setNewStudent(e.target.value)}\n        placeholder=\"Enter student name\"\n      />\n      <button onClick={handleAddStudent}>Add Student</button>\n\n      {/* Pairing button */}\n      <button onClick={handlePairStudents}>Pair Students</button>\n\n      {/* Display list of students to be paired */}\n      <h3>Students to Pair</h3>\n      <ul>\n        {students.map((student, index) => (\n          <li key={index}>{student}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Pairing;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}