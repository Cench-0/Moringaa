{"ast":null,"code":"var _jsxFileName = \"/home/alex/moringa/phase-5/Moringaa/frontend/src/components/UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    age: ''\n  });\n  const [editing, setEditing] = useState(false);\n  useEffect(() => {\n    // Mock fetching user profile\n    setUser({\n      name: 'John Doe',\n      email: 'john@example.com',\n      age: '25'\n    });\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const saveProfile = () => {\n    // Here, you can make an API call to save the updated profile\n    setEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: user.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: user.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"age\",\n        value: user.age,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveProfile,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Age: \", user.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditing(true),\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"0lW2DAhVmlVgW0WC3S75YppZTo4=\");\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserProfile","_s","user","setUser","name","email","age","editing","setEditing","handleChange","e","value","target","prev","saveProfile","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/alex/moringa/phase-5/Moringaa/frontend/src/components/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst UserProfile = () => {\n  const [user, setUser] = useState({ name: '', email: '', age: '' });\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n    // Mock fetching user profile\n    setUser({ name: 'John Doe', email: 'john@example.com', age: '25' });\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUser((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const saveProfile = () => {\n    // Here, you can make an API call to save the updated profile\n    setEditing(false);\n  };\n\n  return (\n    <div>\n      <h2>User Profile</h2>\n      {editing ? (\n        <div>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={user.name}\n            onChange={handleChange}\n          />\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={user.email}\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            name=\"age\"\n            value={user.age}\n            onChange={handleChange}\n          />\n          <button onClick={saveProfile}>Save</button>\n        </div>\n      ) : (\n        <div>\n          <p>Name: {user.name}</p>\n          <p>Email: {user.email}</p>\n          <p>Age: {user.age}</p>\n          <button onClick={() => setEditing(true)}>Edit Profile</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}